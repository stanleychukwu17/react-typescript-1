type boxProps = {
    children: string
}

type boxProps = {
    children: React.ReactNode
}

type buttonProps = {
    handleClick: (event: React.MouseEvent<HTMLButtonElement>) => Void
}

type InputProps = {
    handleClick: (event: React.ChangeEvent<HTMLInputElement>) => Void
}

type containerProps = {
    styles: React.CSSProperties
}


if you want to export types, you can do
-create Person.types.ts or Person.types.d.ts
export type personProps = {
    firstName: string,
    lastName: string,
}

const inputRef = useRef<HTMLInputElement>(null!)
const inputRef = useRef<number|undefined>(undefined)


type privateProps = {
    isLoggedIn: boolean,
    component: React.ComponentType
    component2: React.ComponentType<personProps> // incase of when the ComponentType receive a props which is in this case a personProps
}